{
  "pluginAlias": "Ecowitt",
  "pluginType": "platform",
  "singular": true,
  "headerDisplay": "<p align=\"center\"><img width=\"40%\" src=\"https://raw.githubusercontent.com/rhockenbury/homebridge-ecowitt-weather-sensors/master/docs/assets/ecowitt-logo-text.png\"><br><a href=\"https://github.com/rhockenbury/homebridge-ecowitt-weather-sensors/tree/master?tab=readme-ov-file#getting-started\">Getting Started</a> | <a href=\"https://github.com/rhockenbury/homebridge-ecowitt-weather-sensors/tree/master?tab=readme-ov-file#supported-devices\">Supported Devices</a> | <a href=\"https://github.com/rhockenbury/homebridge-ecowitt-weather-sensors/tree/master?tab=readme-ov-file#configuration\">Configuration Docs</a> | <a href=\"https://github.com/rhockenbury/homebridge-ecowitt-weather-sensors/wiki\">Wiki</a> | <a href=\"https://github.com/rhockenbury/homebridge-ecowitt-weather-sensors/issues/new/choose\">Report an Issue</a></p><p align=\"center\">",
  "footerDisplay": "All config changes take effect <em><strong>when a new data report is received</strong></em> after the next Homebridge restart.</p>",
  "schema": {
    "type": "object",
    "properties": {
      "name": {
        "title": "Name",
        "description": "Plugin name as displayed in the Homebridge log",
        "type": "string",
        "required": true,
        "default": "Ecowitt"
      },
      "baseStation": {
        "type": "object",
        "properties": {
          "mac": {
            "title": "MAC Address",
            "type": "string",
            "pattern": "^([A-Fa-f0-9]{2}:){5}[A-Fa-f0-9]{2}$",
            "required": false,
            "placeholder": "eg. 30:C9:22:3E:DD:2B",
            "description": "The MAC address of the console or gateway<img width=\"4%\" src=\"https://raw.githubusercontent.com/rhockenbury/homebridge-ecowitt-weather-sensors/master/docs/assets/tooltip.png\" title=\"The MAC address can be omitted, leaving it empty will disable MAC validation on each received data report. If you wish to enable MAC validation, find the MAC of your gateway device and enter it here.\">"
          },
          "port": {
            "title": "Port",
            "type": "integer",
            "default": 8080,
            "minimum": 1024,
            "required": true,
            "description": "Port number to listen for data reports<img width=\"8%\" src=\"https://raw.githubusercontent.com/rhockenbury/homebridge-ecowitt-weather-sensors/master/docs/assets/tooltip.png\" title=\"Please ensure that the port entered here exactly matches the port entered for the custom server upload on your gateway device.\">"
          },
          "path": {
            "title": "Path",
            "type": "string",
            "pattern": "^/[A-Za-z/]+$",
            "minLength": 2,
            "maxLength": 25,
            "required": true,
            "default": "/data/report/",
            "description": "Host path to receive data reports<img width=\"8%\" src=\"https://raw.githubusercontent.com/rhockenbury/homebridge-ecowitt-weather-sensors/master/docs/assets/tooltip.png\" title=\"Please ensure that the path entered here exactly matches the path entered for the custom server upload on your gateway device. Alternatively, you can enable 'Accept Any Path' in advanced settings and not specify the path.\">"
          }
        }
      },
      "nameOverrides": {
        "type": "array",
        "items": {
          "title": "Name Override",
          "type": "object",
          "notitle": true,
          "properties": {
            "key": {
              "title": "Service ID",
              "type": "string",
              "minLength": 5,
              "maxLength": 50,
              "required": true,
              "placeholder": "eg. WS85:rainRate, WH51CH1:waterLeak"
            },
            "value": {
              "title": "Name Override",
              "type": "string",
              "minLength": 3,
              "maxLength": 100,
              "required": true,
              "placeholder": "eg. Current Precip, Utility Room"
            }
          }
        }
      },
      "additional": {
        "type": "object",
        "properties": {
          "staticNames": {
            "title": "Static Names",
            "type": "string",
            "required": true,
            "default": false,
            "description": "Enable or disable data property values <br> in the service names",
            "enum": [true, false],
            "enumNames": ["Enabled", "Disabled"]
          },
          "validateMac": {
            "title": "MAC Address Validation",
            "type": "string",
            "required": true,
            "default": true,
            "description": "Verify the MAC address in each received <br> data report",
            "enum": [true, false],
            "enumNames": ["Enabled", "Disabled"]
          },
          "luxFactor": {
            "title": "Lux Conversion Factor",
            "type": "number",
            "required": true,
            "default": 126.7,
            "description": "Factor to convert irradiance (W/mÂ²) <br> to illuminance (lux)"
          },
          "acceptAnyPath": {
            "title": "Accept Any Path",
            "type": "string",
            "required": true,
            "default": false,
            "description": "Process any data report regardless <br> of URL path received on",
            "enum": [true, false],
            "enumNames": ["Enabled", "Disabled"]
          },
          "validateTimestamp": {
            "title": "Timestamp Validation",
            "type": "string",
            "required": true,
            "default": true,
            "description": "Verify the timestamp in each received <br> data report",
            "enum": [true, false],
            "enumNames": ["Enabled", "Disabled"]
          },
          "removeStaleDevices": {
            "title": "Stale Device Removal",
            "type": "string",
            "required": true,
            "default": true,
            "description": "Remove an accessory if it is no longer <br> discovered from a data report",
            "enum": [true, false],
            "enumNames": ["Enabled", "Disabled"]
          },
          "logDataReports": {
            "title": "Log Data Reports",
            "type": "string",
            "required": true,
            "default": false,
            "description": "Show the data report in Homebridge logs <br> each time a data report is received",
            "enum": [true, false],
            "enumNames": ["Enabled", "Disabled"]
          },
          "triggerMode": {
            "title": "Trigger Mode",
            "type": "string",
            "required": true,
            "default": "all",
            "description": "Select the condition for triggering <br> motion detected for motion sensor services",
            "enum": ["all", "toZero", "fromZero", "tofromZero"],
            "enumNames": ["All changes", "Changes to zero", "Changes from zero", "Changes to/from zero"]
          }
        }
      },
      "customThresholds": {
        "title": "Thresholds",
        "type": "array",
        "required": true,
        "items": {
          "title": "Thresholds",
          "type": "object",
          "notitle": true,
          "properties": {
            "name": {
              "title": "Threshold Name",
              "type": "string",
              "minLength": 3,
              "maxLength": 100,
              "required": true,
              "placeholder": "eg. Backyard High Wind Warning"
            },
            "dataProperty": {
              "title": "Data Property",
              "type": "string",
              "notitle": true,
              "default": "none",
              "required": true,
              "enum": ["none", "windDirection", "windSpeed", "windGustSpeed", "windMaxDailySpeed", "rainRate", "rainEventTotal", "rainHourlyTotal", "rainDailyTotal", "rainWeeklyTotal", "rainMonthlyTotal", "rainYearlyTotal", "uvIndex", "lightningEvents", "lightningDistance", "lightningTime", "airGap", "currentDepth", "totalDepth"],
              "enumNames": ["None", "Wind Direction", "Wind Speed", "Wind Gust Speed", "Wind Max Daily Speed", "Rain Rate", "Rain Event Total", "Rain Hourly Total", "Rain Daily Total", "Rain Weekly Total", "Rain Monthly Total", "Rain Yearly Total", "UV Index", "Lightning Events", "Lightning Distance", "Lightning Time", "Air Gap", "Current Depth", "Total Depth"]
            },
            "comparator": {
              "title": "Comparator",
              "type": "string",
              "notitle": true,
              "default": "none",
              "required": true,
              "enum": ["none", "gt", "lt"],
              "enumNames": ["None", "Greater than", "Less than"]
            },
            "value": {
              "title": "Value",
              "type": "number",
              "minimum": 0,
              "required": true,
              "notitle": true,
              "placeholder": "eg. 12.5"
            }
          }
        }
      },
      "hidden": {
        "type": "object",
        "properties": {
          "airGap": {
            "title": "Air Gap",
            "type": "boolean",
            "required": false
          },
          "currentDepth": {
            "title": "Current Depth",
            "type": "boolean",
            "required": false
          },
          "totalDepth": {
            "title": "Total Depth",
            "type": "boolean",
            "required": false
          },
          "windDirection": {
            "title": "Wind Direction",
            "type": "boolean",
            "required": false
          },
          "windSpeed": {
            "title": "Wind Speed",
            "type": "boolean",
            "required": false
          },
          "windGustSpeed": {
            "title": "Wind Gust Speed",
            "type": "boolean",
            "required": false
          },
          "windMaxDailySpeed": {
            "title": "Wind Max Daily Speed",
            "type": "boolean",
            "required": false
          },
          "rainRate": {
            "title": "Rain Rate",
            "type": "boolean",
            "required": false
          },
          "rainEventTotal": {
            "title": "Rain Event Total",
            "type": "boolean",
            "required": false
          },
          "rainHourlyTotal": {
            "title": "Rain Hourly Total",
            "type": "boolean",
            "required": false
          },
          "rainDailyTotal": {
            "title": "Rain Daily Total",
            "type": "boolean",
            "required": false
          },
          "rainWeeklyTotal": {
            "title": "Rain Weekly Total",
            "type": "boolean",
            "required": false
          },
          "rainMonthlyTotal": {
            "title": "Rain Monthly Total",
            "type": "boolean",
            "required": false
          },
          "rainYearlyTotal": {
            "title": "Rain Yearly Total",
            "type": "boolean",
            "required": false
          },
          "rainTotal": {
            "title": "Rain Total",
            "type": "boolean",
            "required": false
          },
          "solarRadiation": {
            "title": "Solar Radiation",
            "type": "boolean",
            "required": false
          },
          "uvIndex": {
            "title": "UV Index",
            "type": "boolean",
            "required": false
          },
          "indoorTemperature": {
            "title": "Indoor Temperature",
            "type": "boolean",
            "required": false
          },
          "temperature": {
            "title": "Temperature",
            "type": "boolean",
            "required": false
          },
          "indoorHumidity": {
            "title": "Indoor Humidity",
            "type": "boolean",
            "required": false
          },
          "humidity": {
            "title": "Humidity",
            "type": "boolean",
            "required": false
          },
          "soilMoisture": {
            "title": "Soil Moisture",
            "type": "boolean",
            "required": false
          },
          "waterLeak": {
            "title": "Water Leak",
            "type": "boolean",
            "required": false
          },
          "leafWetness": {
            "title": "Leaf Wetness",
            "type": "boolean",
            "required": false
          },
          "airQualityPM25": {
            "title": "PM2.5 Air Quality",
            "type": "boolean",
            "required": false
          },
          "airQualityPM25Avg": {
            "title": "PM2.5 Air Quality Avg",
            "type": "boolean",
            "required": false
          },
          "airQualityPM10": {
            "title": "PM10 Air Quality",
            "type": "boolean",
            "required": false
          },
          "airQualityPM10Avg": {
            "title": "PM10 Air Quality Avg",
            "type": "boolean",
            "required": false
          },
          "carbonDioxide": {
            "title": "COâ Level",
            "type": "boolean",
            "required": false
          },
          "carbonDioxideAvg": {
            "title": "COâ Level Avg",
            "type": "boolean",
            "required": false
          },
          "lightningEvents": {
            "title": "Lightning Events",
            "type": "boolean",
            "required": false
          },
          "lightningDistance": {
            "title": "Lightning Distance",
            "type": "boolean",
            "required": false
          },
          "lightningTime": {
            "title": "Lightning Time",
            "type": "boolean",
            "required": false
          },
          "battery": {
            "title": "Battery",
            "type": "boolean",
            "required": false
          },
          "BASE": {
            "title": "BASE",
            "type": "boolean",
            "required": false
          },
          "LDS01": {
            "title": "LDS01",
            "type": "boolean",
            "required": false
          },
          "WH25": {
            "title": "WH25",
            "type": "boolean",
            "required": false
          },
          "WH26": {
            "title": "WH26",
            "type": "boolean",
            "required": false
          },
          "WN30": {
            "title": "WN30",
            "type": "boolean",
            "required": false
          },
          "WN31": {
            "title": "WN31",
            "type": "boolean",
            "required": false
          },
          "WN34": {
            "title": "WN34",
            "type": "boolean",
            "required": false
          },
          "WN35": {
            "title": "WN35",
            "type": "boolean",
            "required": false
          },
          "WH40": {
            "title": "WH40",
            "type": "boolean",
            "required": false
          },
          "WH41": {
            "title": "WH41",
            "type": "boolean",
            "required": false
          },
          "WH45": {
            "title": "WH45",
            "type": "boolean",
            "required": false
          },
          "WH46": {
            "title": "WH46",
            "type": "boolean",
            "required": false
          },
          "WH51": {
            "title": "WH51",
            "type": "boolean",
            "required": false
          },
          "WH55": {
            "title": "WH55",
            "type": "boolean",
            "required": false
          },
          "WH57": {
            "title": "WH57",
            "type": "boolean",
            "required": false
          },
          "WH65": {
            "title": "WH65",
            "type": "boolean",
            "required": false
          },
          "WN67": {
            "title": "WN67",
            "type": "boolean",
            "required": false
          },
          "WS68": {
            "title": "WS68",
            "type": "boolean",
            "required": false
          },
          "WS80": {
            "title": "WS80",
            "type": "boolean",
            "required": false
          },
          "WS85": {
            "title": "WS85",
            "type": "boolean",
            "required": false
          },
          "WS90": {
            "title": "WS90",
            "type": "boolean",
            "required": false
          }
        }
      },
      "customHidden": {
        "type": "array",
        "items": {
          "type": "string",
          "title": "Service ID&nbsp;<strong class=\"text-danger\">*</strong>",
          "minLength": 5,
          "maxLength": 50,
          "placeholder": "eg. WS85:rainRate, WH51CH1:waterLeak, BASE:indoorTemperature"
        }
      },
      "units": {
        "type": "object",
        "properties": {
          "wind": {
            "title": "Wind Speed",
            "type": "string",
            "default": "mph",
            "required": true,
            "oneOf": [
              {
                "title": "Miles / Hour",
                "enum": [
                  "mph"
                ]
              },
              {
                "title": "Knots",
                "enum": [
                  "kts"
                ]
              },
              {
                "title": "Kilometers / Hour",
                "enum": [
                  "kph"
                ]
              },
              {
                "title": "Meters / Second",
                "enum": [
                  "mps"
                ]
              }
            ]
          },
          "rain": {
            "title": "Rain Fall",
            "type": "string",
            "default": "in",
            "required": true,
            "oneOf": [
              {
                "title": "Inches",
                "enum": [
                  "in"
                ]
              },
              {
                "title": "Millimeters",
                "enum": [
                  "mm"
                ]
              }
            ]
          },
          "lightningDistance": {
            "title": "Lightning Distance",
            "type": "string",
            "default": "mi",
            "required": true,
            "oneOf": [
              {
                "title": "Miles",
                "enum": [
                  "mi"
                ]
              },
              {
                "title": "Kilometers &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
                "enum": [
                  "km"
                ]
              }
            ]
          },
          "laserDistance": {
            "title": "Laser Distance",
            "type": "string",
            "default": "in",
            "required": true,
            "oneOf": [
              {
                "title": "Inches",
                "enum": [
                  "in"
                ]
              },
              {
                "title": "Feet",
                "enum": [
                  "ft"
                ]
              },
              {
                "title": "Millimeters",
                "enum": [
                  "mm"
                ]
              },
              {
                "title": "Meters",
                "enum": [
                  "mt"
                ]
              }
            ]
          },
          "temperature": {
            "title": "Temperature",
            "type": "string",
            "default": "fh",
            "required": true,
            "oneOf": [
              {
                "title": "Fahrenheit",
                "enum": [
                  "fh"
                ]
              },
              {
                "title": "Celcius",
                "enum": [
                  "ce"
                ]
              }
            ]
          }
        }
      }
    }
  },
  "form": [
    {
      "type": "fieldset",
      "expandable": true,
      "expanded": false,
      "title": "Data Report",
      "items": [
        {
          "type": "help",
          "helpvalue": "<p class=\"help-block\">Configure the plugin to receive data reports.</p>"
        },
        {
          "type": "flex",
          "flex-flow": "row wrap",
          "flex": "6 6",
          "notitle": true,
          "items": [
            "baseStation.mac"
          ]
        },
        {
          "type": "flex",
          "flex-flow": "row wrap",
          "flex": "3 3",
          "notitle": true,
          "items": [
            "baseStation.port",
            "baseStation.path"
          ]
        }
      ]
    },
    {
      "type": "fieldset",
      "expandable": true,
      "expanded": false,
      "title": "Units",
      "displayFlex": true,
      "items": [
        {
          "type": "help",
          "helpvalue": "<p class=\"help-block\">Select the units for the data properties.</p>"
        },
        {
          "type": "flex",
          "flex-flow": "row wrap",
          "flex": "2 2",
          "items": [
            {
              "type": "flex",
              "items": [
                "units.wind",
                "units.temperature",
                "units.laserDistance"
              ]
            },
            {
              "type": "flex",
              "items": [
                "units.rain",
                "units.lightningDistance"
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "fieldset",
      "expandable": true,
      "expanded": false,
      "title": "Hidden Values",
      "displayFlex": true,
      "items": [
        {
          "type": "help",
          "helpvalue": "<p class=\"help-block\">Select the data properties that should not be displayed.<img width=\"4%\" src=\"https://raw.githubusercontent.com/rhockenbury/homebridge-ecowitt-weather-sensors/master/docs/assets/tooltip.png\" title=\"The data property will be hidden across all devices that show that specific data property.\"></p>"
        },
        {
          "type": "flex",
          "flex-flow": "row wrap",
          "flex": "2 2",
          "items": [
            {
              "type": "flex",
              "items": [
                "hidden.windDirection",
                "hidden.windSpeed",
                "hidden.windGustSpeed",
                "hidden.windMaxDailySpeed",
                "hidden.rainRate",
                "hidden.rainEventTotal",
                "hidden.rainHourlyTotal",
                "hidden.rainDailyTotal",
                "hidden.rainWeeklyTotal",
                "hidden.rainMonthlyTotal",
                "hidden.rainYearlyTotal",
                "hidden.rainTotal"
              ]
            },
            {
              "type": "flex",
              "items": [
                "hidden.solarRadiation",
                "hidden.uvIndex",
                "hidden.indoorTemperature",
                "hidden.temperature",
                "hidden.indoorHumidity",
                "hidden.humidity",
                "hidden.soilMoisture",
                "hidden.waterLeak",
                "hidden.leafWetness",
                "hidden.airQualityPM10",
                "hidden.airQualityPM10Avg"
              ]
            },
            {
              "type": "flex",
              "items": [
                "hidden.airQualityPM25",
                "hidden.airQualityPM25Avg",
                "hidden.carbonDioxide",
                "hidden.carbonDioxideAvg",
                "hidden.lightningEvents",
                "hidden.lightningDistance",
                "hidden.lightningTime",
                "hidden.airGap",
                "hidden.currentDepth",
                "hidden.totalDepth",
                "hidden.battery"
              ]
            }
          ]
        },
        {
          "type": "help",
          "helpvalue": "<p class=\"help-block\">Select the devices that should not be displayed.<img width=\"4%\" src=\"https://raw.githubusercontent.com/rhockenbury/homebridge-ecowitt-weather-sensors/master/docs/assets/tooltip.png\" title=\"The device will not show as an accessory and all data properties from the device will not be available.\"></p>"
        },
        {
          "type": "flex",
          "flex-flow": "row wrap",
          "flex": "2 2",
          "items": [
            {
              "type": "flex",
              "items": [
                "hidden.BASE",
                "hidden.LDS01",
                "hidden.WH25",
                "hidden.WH26",
                "hidden.WN30",
                "hidden.WN31",
                "hidden.WN34"
              ]
            },
            {
              "type": "flex",
              "items": [
                "hidden.WN35",
                "hidden.WH40",
                "hidden.WH41",
                "hidden.WH45",
                "hidden.WH46",
                "hidden.WH51",
                "hidden.WH55"
              ]
            },
            {
              "type": "flex",
              "items": [
                "hidden.WH57",
                "hidden.WH65",
                "hidden.WN67",
                "hidden.WS68",
                "hidden.WS80",
                "hidden.WS85",
                "hidden.WS90"
              ]
            }
          ]
        },
        {
          "type": "help",
          "helpvalue": "<p class=\"help-block\">Specify the data properties on a specific device that should not be displayed.<a href=\"https://github.com/rhockenbury/homebridge-ecowitt-weather-sensors/wiki/Setting-Custom-Hidden-Properties\" target=\"_blank\"><img width=\"4%\" src=\"https://raw.githubusercontent.com/rhockenbury/homebridge-ecowitt-weather-sensors/master/docs/assets/tooltip.png\" title=\"Detailed instructions for setting the Service ID can be found by clicking here.\"></a></p>"
        },
        {
          "key": "customHidden",
          "title": "Hidden Values",
          "notitle": true,
          "type": "flex",
          "startEmpty": true,
          "items": [
            "customHidden[]"
          ]
        }
      ]
    },
    {
      "type": "fieldset",
      "expandable": true,
      "expanded": false,
      "title": "Threshold Triggers",
      "displayFlex": true,
      "items": [
        {
          "type": "help",
          "helpvalue": "<p class=\"help-block\">Configure the thresholds to trigger the motion sensor.<a href=\"https://github.com/rhockenbury/homebridge-ecowitt-weather-sensors/wiki/Setting-Threshold-Triggers\" target=\"_blank\"><img width=\"4%\" src=\"https://raw.githubusercontent.com/rhockenbury/homebridge-ecowitt-weather-sensors/master/docs/assets/tooltip.png\" title=\"Select units first before configuring thresholds. Thresholds are only available for data properties represented with Motion Sensor services. More information on threshold triggers can be found by clicking here.\"></a></p>"
        },
        {
          "type": "flex",
          "key": "customThresholds",
          "title": "Threshold Triggers",
          "startEmpty": true,
          "notitle": true,
          "items": [
            {
              "type": "flex",
              "items": [
                {
                  "type": "flex",
                  "flex-flow": "row wrap",
                  "flex": "3 3",
                  "items": [
                    "customThresholds[].name"
                  ]
                },
                {
                  "type": "flex",
                  "flex-flow": "row wrap",
                  "flex": "3 3",
                  "items": [
                    {
                      "type": "flex",
                      "items": [
                        {
                          "type": "help",
                          "helpvalue": "<strong>Trigger when the property...<strong>&nbsp;<strong class=\"text-danger\">*</strong>"
                        },
                        "customThresholds[].dataProperty"
                      ]
                    },
                    {
                      "type": "flex",
                      "items": [
                        {
                          "type": "help",
                          "helpvalue": "<strong>is...<strong>&nbsp;<strong class=\"text-danger\">*</strong>"
                        },
                        "customThresholds[].comparator"
                      ]
                    },
                    {
                      "type": "flex",
                      "items": [
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return model.customThresholds[arrayIndices].dataProperty.startsWith('none');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold (deg) of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return model.customThresholds[arrayIndices].dataProperty.startsWith('windDirection');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold (mph) of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return (model.customThresholds[arrayIndices].dataProperty.startsWith('wind') && model.customThresholds[arrayIndices].dataProperty.includes('Speed') && model.units.wind === 'mph');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold (kts) of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return (model.customThresholds[arrayIndices].dataProperty.startsWith('wind') && model.customThresholds[arrayIndices].dataProperty.includes('Speed') && model.units.wind === 'kts');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold (kph) of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return (model.customThresholds[arrayIndices].dataProperty.startsWith('wind') && model.customThresholds[arrayIndices].dataProperty.includes('Speed') && model.units.wind === 'kph');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold (mps) of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return (model.customThresholds[arrayIndices].dataProperty.startsWith('wind') && model.customThresholds[arrayIndices].dataProperty.includes('Speed') && model.units.wind === 'mps');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold (in) of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return (model.customThresholds[arrayIndices].dataProperty.startsWith('rain') && model.units.rain === 'in');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold (mm) of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return (model.customThresholds[arrayIndices].dataProperty.startsWith('rain') && model.units.rain === 'mm');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return model.customThresholds[arrayIndices].dataProperty.startsWith('uv');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return model.customThresholds[arrayIndices].dataProperty.startsWith('lightningEvents');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold (miles) of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return (model.customThresholds[arrayIndices].dataProperty.startsWith('lightningDistance') && model.units.lightningDistance === 'mi');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold (km) of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return (model.customThresholds[arrayIndices].dataProperty.startsWith('lightningDistance') && model.units.lightningDistance === 'km');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold (secs) of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return model.customThresholds[arrayIndices].dataProperty.startsWith('lightningTime');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold (in) of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return ((model.customThresholds[arrayIndices].dataProperty == 'airGap' || model.customThresholds[arrayIndices].dataProperty.includes('Depth')) && model.units.laserDistance === 'in');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold (ft) of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return ((model.customThresholds[arrayIndices].dataProperty == 'airGap' || model.customThresholds[arrayIndices].dataProperty.includes('Depth')) && model.units.laserDistance === 'ft');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold (mm) of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return ((model.customThresholds[arrayIndices].dataProperty == 'airGap' || model.customThresholds[arrayIndices].dataProperty.includes('Depth')) && model.units.laserDistance === 'mm');"
                          }
                        },
                        {
                          "type": "help",
                          "helpvalue": "<strong>the threshold (m) of...<strong>&nbsp;<strong class=\"text-danger\">*</strong>",
                          "condition": {
                            "functionBody": "return ((model.customThresholds[arrayIndices].dataProperty == 'airGap' || model.customThresholds[arrayIndices].dataProperty.includes('Depth')) && model.units.laserDistance === 'mt');"
                          }
                        },
                        "customThresholds[].value"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "fieldset",
      "expandable": true,
      "expanded": false,
      "title": "Name Overrides",
      "displayFlex": true,
      "items": [
        {
          "type": "help",
          "helpvalue": "<p class=\"help-block\">Configure custom names for the services on a device.<a href=\"https://github.com/rhockenbury/homebridge-ecowitt-weather-sensors/wiki/Setting-Name-Overrides\" target=\"_blank\"><img width=\"4%\" src=\"https://raw.githubusercontent.com/rhockenbury/homebridge-ecowitt-weather-sensors/master/docs/assets/tooltip.png\" title=\"Detailed instructions for setting the Service ID can be found by clicking here.\"></a></p>"
        },
        {
          "key": "nameOverrides",
          "add": "Add Another Override",
          "notitle": true,
          "startEmpty": true,
          "type": "flex",
          "items": [
            {
              "type": "flex",
              "flex-flow": "row wrap",
              "flex": "3 3",
              "items": [
                "nameOverrides[].key",
                "nameOverrides[].value"
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "fieldset",
      "expandable": true,
      "expanded": false,
      "title": "Advanced Options",
      "displayFlex": true,
      "items": [
        {
          "type": "help",
          "helpvalue": "<p class=\"help-block\">Configure internal plugin behavior."
        },
        {
          "type": "flex",
          "flex-flow": "row wrap",
          "flex": "3 3",
          "items": [
            {
              "type": "flex",
              "items": [
                "additional.staticNames",
                "additional.validateMac",
                "additional.validateTimestamp",
                "additional.logDataReports"
              ]
            },
            {
              "type": "flex",
              "items": [
                "additional.luxFactor",
                "additional.acceptAnyPath",
                "additional.removeStaleDevices",
                "additional.triggerMode"
              ]
            }
          ]
        }
      ]
    }
  ]
}
